C51 COMPILER V9.01   IR                                                                    02/07/2022 14:19:38 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN IR.OBJ
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE IR.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX52.H>
   2          #include "INT0.H"
   3          #include "TIMER0.H"
   4          
   5          unsigned char IR_State;      //状态
   6          unsigned int IR_Time;        //计时
   7          
   8          unsigned char IR_Data[4];    //存放32位数据
   9          unsigned char IR_PData;      //IR_Datad 的角标
  10          
  11          unsigned char IR_DataFlag;       //数据标志，置一表示数据收到了
  12          unsigned char IR_RepeatFlag; //重发标志，置一表示收到重发
  13          unsigned char IR_Address;        //数据：地址码
  14          unsigned char IR_Command;        //数据：命令码
  15          
  16          /**
  17            * @brief  红外遥控初始化
  18            * @param  无
  19            * @retval 无
  20            */
  21          void IR_Init(void)
  22          {
  23   1              Timer0_Init();
  24   1              Int0_Init();
  25   1      }
  26          
  27          /**
  28            * @brief  红外遥控获取收到数据帧标志位
  29            * @param  无
  30            * @retval 是否收到数据帧，1为收到，0为未收到
  31            */
  32          unsigned char IR_GetDataFlag(void)
  33          {
  34   1              if(IR_DataFlag)
  35   1              {
  36   2                      IR_DataFlag = 0;
  37   2                      return 1;
  38   2              }
  39   1              return 0;
  40   1      }
  41          
  42          /**
  43            * @brief  红外遥控获取收到连发帧标志位
  44            * @param  无
  45            * @retval 是否收到连发帧，1为收到，0为未收到
  46            */
  47          unsigned char IR_GetRepeatFlag(void)
  48          {
  49   1              if(IR_RepeatFlag)
  50   1              {
  51   2                      IR_RepeatFlag = 0;
  52   2                      return 1;
  53   2              }
  54   1              return 0;
  55   1      }
C51 COMPILER V9.01   IR                                                                    02/07/2022 14:19:38 PAGE 2   

  56          
  57          /**
  58            * @brief  红外遥控获取收到的地址数据
  59            * @param  无
  60            * @retval 收到的地址数据
  61            */
  62          unsigned char IR_GetAddress(void)
  63          {
  64   1              return IR_Address;
  65   1      }
  66          
  67          /**
  68            * @brief  红外遥控获取收到的命令数据
  69            * @param  无
  70            * @retval 收到的命令数据
  71            */
  72          unsigned char IR_GetCommand(void)
  73          {
  74   1              return IR_Command;
  75   1      }
  76          
  77          //外部中断0中断函数，下降沿触发执行
  78          void Int_0(void) interrupt 0
  79          {
  80   1              if(IR_State == 0)                                       //状态0，空闲状态
  81   1              {
  82   2                      Timer0_SetCounter(0);                   //定时计数器清0
  83   2                      Timer0_Run(1);                                  //定时器启动
  84   2                      IR_State = 1;                                   //置状态为1
  85   2              }
  86   1              else if(IR_State == 1)                          //状态1，等待Start信号或Repeat信号
  87   1              {
  88   2                      IR_Time = Timer0_GetCounter();  //获取上一次中断到此次中断的时间
  89   2                      Timer0_SetCounter(0);                   //定时计数器清0
  90   2                      //如果计时为13.5ms，则接收到了Start信号
  91   2                      //（判定值在12MHz晶振下为13500，在11.0592MHz晶振下为12442）     
  92   2                      if(IR_Time>13500-500 && IR_Time<13500+500)
  93   2                      {
  94   3                              IR_State = 2;                            //置状态为2
  95   3                      }
  96   2                      //如果计时为11.25ms，则接收到了Repeat信号
  97   2                      //（判定值在12MHz晶振下为11250，在11.0592MHz晶振下为10368）
  98   2                      else if(IR_Time>11250-500 && IR_Time<11250+500)
  99   2                      {
 100   3                              IR_RepeatFlag = 1;                        //置收到连发帧标志位为1
 101   3                              Timer0_Run(0);                            //定时器停止
 102   3                              IR_State = 0;                             //置状态为0
 103   3                      }
 104   2                      else                                                      //接收出错
 105   2                      {
 106   3                              IR_State = 1;                             //置状态为1
 107   3                      }
 108   2              }
 109   1              else if (IR_State == 2)                           //状态2，接收数据
 110   1              {
 111   2                      IR_Time = Timer0_GetCounter();    //获取上一次中断到此次中断的时间
 112   2                      Timer0_SetCounter(0);                     //定时计数器清0
 113   2                      //如果计时为1120us，则接收到了数据0
 114   2                      //（判定值在12MHz晶振下为1120，在11.0592MHz晶振下为1032）
 115   2                      if(IR_Time>1120-500 && IR_Time<1120+500)
 116   2                      {
 117   3                              IR_Data[IR_PData/8] &= ~(0x01<<(IR_PData%8));//将32位数据  分割成四分
C51 COMPILER V9.01   IR                                                                    02/07/2022 14:19:38 PAGE 3   

 118   3                              IR_PData++;                                     //分别存放在IR_Data的0，1，2，3中                                                                  
 119   3                      }
 120   2                      //如果计时为2250us，则接收到了数据1
 121   2                      //（判定值在12MHz晶振下为2250，在11.0592MHz晶振下为2074）
 122   2                      else if(IR_Time>2250-500 && IR_Time<2250+500)
 123   2                      {
 124   3                              IR_Data[IR_PData/8] |= (0x01<<(IR_PData%8));
 125   3                              IR_PData++;
 126   3                      }
 127   2                      else                                                      //接收出错
 128   2                      {
 129   3                              IR_PData = 0;                             //数据位置指针清0
 130   3                              IR_State = 1;                             //置状态为1
 131   3                      }
 132   2                      if(IR_PData >= 32)                                //如果接收到了32位数据
 133   2                      {
 134   3                              IR_PData = 0;                             //数据位置指针清0
 135   3                              if((IR_Data[0] == ~IR_Data[1]) && (IR_Data[2] == ~IR_Data[3]))  //数据验证
 136   3                              {
 137   4                                      IR_Address = IR_Data[0];  //转存数据
 138   4                                      IR_Command = IR_Data[2];
 139   4                                      IR_DataFlag = 1;                  //置收到连发帧标志位为1
 140   4                              }
 141   3                              Timer0_Run(0);                            //定时器停止
 142   3                              IR_State = 0;                             //置状态为0
 143   3                      }
 144   2              }
 145   1      
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
